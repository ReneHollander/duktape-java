apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

def mainClassName = "at.renehollander.duktape.Main"

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

task fatJar(type: Jar) {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

jar {
    actions = []
    dependsOn = []
    dependsOn('fatJar')
}

task javah(dependsOn: [build]) {
    doLast {
        def classes = [
                'at.renehollander.duktape.Duktape'                  : 'src/main/c/duktape-java.h',
                'at.renehollander.duktape.util.NativeHelper'             : 'src/main/c/native-helper.h',
                'at.renehollander.duktape.value.object.DukFunction'       : 'src/main/c/duk-function.h',
                'at.renehollander.duktape.value.object.DukObject'         : 'src/main/c/duk-object.h',
                'at.renehollander.duktape.value.object.DukArray'          : 'src/main/c/duk-array.h',
                'at.renehollander.duktape.value.object.DukJavaFunction'   : 'src/main/c/duk-java-function.h',
                'at.renehollander.duktape.value.object.DukError'          : 'src/main/c/duk-error.h',
                'at.renehollander.duktape.value.object.DukBuffer'         : 'src/main/c/duk-buffer.h'
        ]
        classes.each { inputClass, outputFile ->
            // println inputClass + ": " + outputFile
            delete(outputFile)
            ant.javah(class: inputClass, outputFile: outputFile, classpath: sourceSets.main.output.asPath)
        }
    }
}

